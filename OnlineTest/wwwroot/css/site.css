html {
    font-size: 14px;
}

@media (min-width: 768px) 
{
    html {
        font-size: 16px;
    }
}

html {
    position: relative;
    min-height: 100%;
}

body {
    margin-bottom: 60px;
    background-color: #ededed;
    /*background-image:url(../bg.jpg);*/
}

body {
    font-family: Arial, Helvetica, sans-serif;
}

* {
    box-sizing: border-box
}

/* Full-width input fields */
input[type=text], input[type=password], input[type=number] {
    width: 100%;
    padding: 15px;
    margin: 5px 0 22px 0;
    display: inline-block;
    border: none;
    background: #f1f1f1;
}

    input[type=text]:focus, input[type=password], input[type=number]:focus {
        background-color: #ddd;
        outline: none;
    }

hr {
    border: 1px solid #f1f1f1;
    margin-bottom: 25px;
}

select {
    width: 100%;
    padding: 15px;
    margin: 5px 0 22px 0;
    display: inline-block;
    border: none;
    background: #f1f1f1;
}
/* Set a style for all buttons */
button {
    background-color: forestgreen;
    color: white;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    cursor: pointer;
    width: 100%;
    opacity: 0.9;
}

    button:hover {
        opacity: 1;
    }

/* Extra styles foredcancel button */
.cancelbtn {
    padding: 14px 20px;
    background-color: red;
}

/* Float cancel and signup buttons and add an equal width */
.cancelbtn, .signupbtn {
    float: left;
    width: 50%;
}

/* Add padding to container elements */
.container {
    padding: 16px;
}

/* Clear floats */
.clearfix::after {
    content: "";
    clear: both;
    display: table;
}
/**
 * Inspiration for this project found at:
 * https://markus.oberlehner.net/blog/pure-css-animated-svg-circle-chart
 * 1. The `reverse` animation direction plays the animation backwards
 *    which makes it start at the stroke offset 100 which means displaying
 *    no stroke at all and animating it to the value defined in the SVG
 *    via the inline `stroke-dashoffset` attribute.
 * 2. Rotate by -90 degree to make the starting point of the
 *    stroke the top of the circle.
 * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
 *    and Edge, use the transform attribute directly on the SVG element as a
 * .  workaround.
 */

.circle-chart {
    width: 150px;
    height: 150px;
}

.circle-chart__circle {
    stroke: #00acc1;
    stroke-width: 2;
    stroke-linecap: square;
    fill: none;
    animation: circle-chart-fill 2s reverse; /* 1 */
    transform: rotate(-90deg); /* 2, 3 */
    transform-origin: center; /* 4 */
}

/**
 * 1. Rotate by -90 degree to make the starting point of the
 *    stroke the top of the circle.
 * 2. Scaling mirrors the circle to make the stroke move right
 *    to mark a positive chart value.
 * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
 *    and Edge, use the transform attribute directly on the SVG element as a
 * .  workaround.
 */

.circle-chart__circle--negative {
    transform: rotate(-90deg) scale(1,-1); /* 1, 2, 3 */
}

.circle-chart__background {
    stroke: #efefef;
    stroke-width: 2;
    fill: none;
}

.circle-chart__info {
    animation: circle-chart-appear 2s forwards;
    opacity: 0;
    transform: translateY(0.3em);
}

.circle-chart__percent {
    alignment-baseline: central;
    text-anchor: middle;
    font-size: 8px;
}

.circle-chart__subline {
    alignment-baseline: central;
    text-anchor: middle;
    font-size: 3px;
}

.success-stroke {
    stroke: #00C851;
}

.warning-stroke {
    stroke: #ffbb33;
}

.danger-stroke {
    stroke: #ff4444;
}

@keyframes circle-chart-fill {
    to {
        stroke-dasharray: 0 100;
    }
}

@keyframes circle-chart-appear {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}


.skills {
    color: black;
}

.skills_section {
    width: 100%;
    margin: 0 auto;
    margin-bottom: 80px;
}

.skill-head {
    margin: 80px 0;
}

    .skill-head h1 {
        font-size: 60px;
        font-weight: 700;
    }


    .skill-head p {
        margin-bottom: 10px;
    }

.skills-area {
    margin-top: 5%;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
@media screen and (max-width: 480px) {
    .skills-area {
        margin-top: 5%;
        display: grid;
        flex-wrap: wrap;
        justify-content: center;
    }
}

    .single-skill {
        width: 30%;
        margin-bottom: 80px;
    }

    .success-stroke {
        stroke: green;
    }

    .circle-chart__background {
        stroke: #ede4e4;
        stroke-width: 1;
    }
.bottomright {
    position: fixed;
    z-index: 1000;
    bottom: 0;
    right: 0;
}

.base-timer {
    position: relative;
    width: 300px;
    height: 300px;
}
@media only screen and (max-width: 480px) {
    .base-timer {
        position: relative;
        width: 120px;
        height: 120px;
    }
}

    .base-timer__svg {
        transform: scaleX(-1);
    }

    .base-timer__circle {
        fill: none;
        stroke: none;
    }

    .base-timer__path-elapsed {
        stroke-width: 7px;
        stroke: grey;
    }

    .base-timer__path-remaining {
        stroke-width: 7px;
        stroke-linecap: round;
        transform: rotate(90deg);
        transform-origin: center;
        transition: 1s linear all;
        fill-rule: nonzero;
        stroke: currentColor;
    }

        .base-timer__path-remaining.green {
            color: rgb(65, 184, 131);
        }

        .base-timer__path-remaining.orange {
            color: orange;
        }

        .base-timer__path-remaining.red {
            color: red;
        }

    .base-timer__label {
        position: absolute;
        width: 300px;
        height: 300px;
        top: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 48px;
    }
@media only screen and (max-width: 480px) {
    .base-timer__label {
        position: absolute;
        width: 120px;
        height: 120px;
        top: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 25px;
    }
}

